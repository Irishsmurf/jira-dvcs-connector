package com.atlassian.jira.plugins.dvcs.querydsl.v3;

import com.atlassian.pocketknife.api.querydsl.SchemaProvider;
import java.sql.Types;

import static com.mysema.query.types.PathMetadataFactory.*;

import com.mysema.query.types.path.*;

import com.mysema.query.types.PathMetadata;
import com.mysema.query.types.Path;

import com.mysema.query.sql.ColumnMetadata;
import com.mysema.query.sql.RelationalPathBase;

/**
 *
 * Generated by https://bitbucket.org/atlassian/querydsl-ao-code-gen
 */
public class QRepositoryPullRequestToCommitMapping extends RelationalPathBase<QRepositoryPullRequestToCommitMapping> {

    private static final long serialVersionUID = -1824868784L;

    public static final String AO_TABLE_NAME  = "AO_E8B6CC_PR_TO_COMMIT";

    public static final QRepositoryPullRequestToCommitMapping withSchema(SchemaProvider schemaProvider)
    {
        String schema = schemaProvider.getSchema(AO_TABLE_NAME);
        return new QRepositoryPullRequestToCommitMapping("PR_TO_COMMIT", schema, AO_TABLE_NAME);
    }

    /**
     * Database Columns
     */
    // We have not yet built QueryDSL type support for com.atlassian.jira.plugins.dvcs.activity.RepositoryCommitMapping getCommit()


    public final NumberPath<Integer> ID = createNumber("ID", Integer.class);

    // We have not yet built QueryDSL type support for com.atlassian.jira.plugins.dvcs.activity.RepositoryPullRequestMapping getRequest()



    public final com.mysema.query.sql.PrimaryKey<QRepositoryPullRequestToCommitMapping> PR_TO_COMMIT_PK = createPrimaryKey(ID);

    public QRepositoryPullRequestToCommitMapping(String variable, String schema, String table) {
        super(QRepositoryPullRequestToCommitMapping.class, forVariable(variable), schema, table);
        addMetadata();
    }

    private void addMetadata() {
        /**
         * Database Metadata is not yet used by QueryDSL but it might one day.
         */
        
        addMetadata(ID, ColumnMetadata.named("ID").ofType(Types.INTEGER)); // .withSize(0).withNotNull()); // until detect primitive types, int ..
        
    }
}